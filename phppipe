pipeline {
    agent {
        node {
            label 'ana_sunucu'
        }
    }
    triggers {
        pollSCM '* * * * *'
    }
    stages {
              stage('CodeSniffer') {
                  steps {
                      sh '''
                        cd myapphp
                        composer config allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
                        composer require --dev phpcsstandards/phpcsdevtools:^1.0
                        composer require --dev phpstan/phpstan
                        composer require "squizlabs/php_codesniffer=*"
                        ls -ltr vendor/bin
                        vendor/bin/phpcs --standard=phpcs.xml src/
                        '''
                  }
              }
              stage('PHP Compatibility Checks') {
                  steps {
                      sh '''
                        cd myapphp
                        vendor/bin/phpcs --standard=PSR12 src/
                        '''
                  }
              }
              stage('PHPStan') {
                  steps {
                      sh '''
                        cd myapphp
                        vendor/bin/phpstan analyse --error-format=checkstyle --no-progress -n src/ > build/logs/phpstan.checkstyle.xml
                        '''
                  }
              }
    }
    post {
            always {
                recordIssues([
                    sourceCodeEncoding: 'UTF-8',
                    enabledForFailure: true,
                    aggregatingResults: true,
                    tools: [
                        phpCodeSniffer(id: 'phpcs', name: 'CodeSniffer', pattern: 'build/logs/phpcs.checkstyle.xml', reportEncoding: 'UTF-8'),
                        phpStan(id: 'phpstan', name: 'PHPStan', pattern: 'build/logs/phpstan.checkstyle.xml', reportEncoding: 'UTF-8'),
                        phpCodeSniffer(id: 'phpcompat', name: 'PHP Compatibility', pattern: 'build/logs/phpcs-compat.checkstyle.xml', reportEncoding: 'UTF-8')
                    ]
                ])
                failure {
                    echo "I failed"
                }
            }
        }
}
